{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Agenda de desenvolvimento Indicador de Pesagem SEMANA 01 (Aguardando) Testes com indicadores de pesagem. Atividades: (OK) Leitura de manuais; (Aguardando) Calibra\u00e7\u00e3o e compara\u00e7\u00e3o de resultados. SEMANA 02 (Iniciado) Testes da placa de desenvolvimento microcontrolador/circuito ADC Atividades: (Iniciado) Leitura direta do circuito ADC pelo microcontrolador com debug atrav\u00e9s da sa\u00edda serial. SEMANA 03 a 06 Implementa\u00e7\u00e3o do filtro Kalman ao processo de pesagem. Atividades: Implementa\u00e7\u00e3o da l\u00f3gica de filtro em linguagem C e Python; Integra\u00e7\u00e3o do filtro ao microcontrolador stm32 utilizado na placa de desenvolvimento; Implementa\u00e7\u00e3o de l\u00f3gica simples de debug serial. SEMANA 07 a 11 Implementa\u00e7\u00e3o do filtro do processo ao processo de pesagem 2. Atividades: Cria\u00e7\u00e3o de vari\u00e1veis de controle do filtro Kalman; Integra\u00e7\u00e3o da l\u00f3gica filtro + freeRTOS. SEMANA 12 a 15 Cria\u00e7\u00e3o/Integra\u00e7\u00e3o IHM do sistema + FreeRTOS Atividades: Cria\u00e7\u00e3o da interface IHM do sistema com integra\u00e7\u00e3o do FreeRTOS. Testes de integra\u00e7\u00e3o. SEMANA 16 a 20 Logica Modbus + integra\u00e7\u00e3o FreeRTOS Atividades: Desenvolvimento da l\u00f3gica de comunica\u00e7\u00e3o serial; BaudRates: 9600, 19200, 38400, 57600 e 115200 (verificar disponibilidade); StopBit: 8N1 e 8N2; Modbus; Integra\u00e7\u00e3o FreeRTOS. SEMANA 21 a 28 Testes de l\u00f3gica e integra\u00e7\u00e3o FreeRTOS Atividades: Testes e debug das l\u00f3gicas de filtro aplicados ao processo; Testes e debug das l\u00f3gicas de IHM; Testes e debug das l\u00f3gicas de comunica\u00e7\u00e3o serial; Testes e debug das l\u00f3gicas Modbus; Testes e debug das l\u00f3gicas FreeRTOS; OBSERVA\u00c7\u00c3O DE DESENVOLVIMENTO Os prazos estipulados acima s\u00e3o deduzidos a partir de dedica\u00e7\u00e3o exclusiva ao mesmo; A \u00faltima semana de desenvolvimento pode sofrer retra\u00e7\u00e3o em virtude das semanas anteriores de desenvolvimento necessitarem de um maior prazo.","title":"Agenda"},{"location":"#agenda-de-desenvolvimento-indicador-de-pesagem","text":"","title":"Agenda de desenvolvimento Indicador de Pesagem"},{"location":"#semana-01","text":"(Aguardando) Testes com indicadores de pesagem.","title":"SEMANA 01"},{"location":"#atividades","text":"(OK) Leitura de manuais; (Aguardando) Calibra\u00e7\u00e3o e compara\u00e7\u00e3o de resultados.","title":"Atividades:"},{"location":"#semana-02","text":"(Iniciado) Testes da placa de desenvolvimento microcontrolador/circuito ADC","title":"SEMANA 02"},{"location":"#atividades_1","text":"(Iniciado) Leitura direta do circuito ADC pelo microcontrolador com debug atrav\u00e9s da sa\u00edda serial.","title":"Atividades:"},{"location":"#semana-03-a-06","text":"Implementa\u00e7\u00e3o do filtro Kalman ao processo de pesagem.","title":"SEMANA 03 a 06"},{"location":"#atividades_2","text":"Implementa\u00e7\u00e3o da l\u00f3gica de filtro em linguagem C e Python; Integra\u00e7\u00e3o do filtro ao microcontrolador stm32 utilizado na placa de desenvolvimento; Implementa\u00e7\u00e3o de l\u00f3gica simples de debug serial.","title":"Atividades:"},{"location":"#semana-07-a-11","text":"Implementa\u00e7\u00e3o do filtro do processo ao processo de pesagem 2.","title":"SEMANA 07 a 11"},{"location":"#atividades_3","text":"Cria\u00e7\u00e3o de vari\u00e1veis de controle do filtro Kalman; Integra\u00e7\u00e3o da l\u00f3gica filtro + freeRTOS.","title":"Atividades:"},{"location":"#semana-12-a-15","text":"Cria\u00e7\u00e3o/Integra\u00e7\u00e3o IHM do sistema + FreeRTOS","title":"SEMANA 12 a 15"},{"location":"#atividades_4","text":"Cria\u00e7\u00e3o da interface IHM do sistema com integra\u00e7\u00e3o do FreeRTOS. Testes de integra\u00e7\u00e3o.","title":"Atividades:"},{"location":"#semana-16-a-20","text":"Logica Modbus + integra\u00e7\u00e3o FreeRTOS","title":"SEMANA 16 a 20"},{"location":"#atividades_5","text":"Desenvolvimento da l\u00f3gica de comunica\u00e7\u00e3o serial; BaudRates: 9600, 19200, 38400, 57600 e 115200 (verificar disponibilidade); StopBit: 8N1 e 8N2; Modbus; Integra\u00e7\u00e3o FreeRTOS.","title":"Atividades:"},{"location":"#semana-21-a-28","text":"Testes de l\u00f3gica e integra\u00e7\u00e3o FreeRTOS","title":"SEMANA 21 a 28"},{"location":"#atividades_6","text":"Testes e debug das l\u00f3gicas de filtro aplicados ao processo; Testes e debug das l\u00f3gicas de IHM; Testes e debug das l\u00f3gicas de comunica\u00e7\u00e3o serial; Testes e debug das l\u00f3gicas Modbus; Testes e debug das l\u00f3gicas FreeRTOS;","title":"Atividades:"},{"location":"#observacao-de-desenvolvimento","text":"Os prazos estipulados acima s\u00e3o deduzidos a partir de dedica\u00e7\u00e3o exclusiva ao mesmo; A \u00faltima semana de desenvolvimento pode sofrer retra\u00e7\u00e3o em virtude das semanas anteriores de desenvolvimento necessitarem de um maior prazo.","title":"OBSERVA\u00c7\u00c3O DE DESENVOLVIMENTO"},{"location":"observacao/","text":"OBSERVA\u00c7\u00d5ES DE DESENVOLVIMENTO Janeiro Semana 01 Atividades Dia 13: Criado biblioteca vERROR_CHECK() para tratativa de erros (In\u00edcio) Cria\u00e7\u00e3o da fun\u00e7\u00e3o de inicializa\u00e7\u00e3o do adc com compara\u00e7\u00e3o e tratativa de erro (ainda n\u00e3o implementado) Testes com a configura\u00e7\u00e3o do indicador antigo (Configura\u00e7\u00e3o de registradores); Fun\u00e7\u00e3o de leitura do adc (testado) Verifica\u00e7\u00f5es a respeito dos processos ocorridos no atual indicador de pesagem: N\u00e3o \u00e9 feito nenhuma escrita nos registradores de calibra\u00e7\u00e3o; Ao iniciar o atual indicador efetua um comando de reset; S\u00e3o configurados alguns registradores 0x00, 0x01 e 0x02 Ganho em 128 Escrita de configura\u00e7\u00e3o defaut no registrador 1 Escrita no registrador MUX com o valor1 Escrita no Registrador 0x02 do valor 0x04m ativando o registrador \"u8WriteCS1180()\" -> testado \"u8_ResetCS1180()\" -> testado Dia 12: Teste da fun\u00e7\u00e3o \"u8ReadCS1180()\". Efetuado teste sobre o ad seguido da requisi\u00e7\u00e3o de todos os registradores do ADC Cria\u00e7\u00e3o da fun\u00e7\u00e3o \"u8ReadCS1180()\" (N\u00e3o Testada) Cria\u00e7\u00e3o da fun\u00e7\u00e3o \"u8WriteCS1180()\" (N\u00e3o Testado) Cria\u00e7\u00e3o da fun\u00e7\u00e3o \"u8_ResetCS1180()\" (N\u00e3o Testado) Teste da fun\u00e7\u00e3o \"u8_TestCS1180()\" Dia 11: Inicio constru\u00e7\u00e3o biblioteca cs1180 Leitura de Byte em SPI em 16.16us e frequencia de clock em 545.45KHz Cristal externo de 16MHz(desenvolvimento) inserido no lugar do anterior, altera\u00e7\u00e3o do tem de tr\u00e1fego de 8bits em spi em +0.2us Cria\u00e7\u00e3o da leitura SPI (inicio) Cria\u00e7\u00e3o de \"semaforo\" para possivel multipla utiliza\u00e7\u00e3o do canal SPI \"software\", com retorno 0x00 para sucesso e 0x01 para falha na solicita\u00e7\u00e3o de escrita, indicando que o canal j\u00e1 estar em utiliza\u00e7\u00e3o A comunica\u00e7\u00e3o SPI foi atualizada tendo um ganho na frequencia. Motivo, cristal utilizado anteriormente (24.594MHz). Foi diagnosticado um erro com rela\u00e7\u00e3o ao cristal utilizado na placa de 24.594MHz para o de 25MHz. Para desenvolvimento ser\u00e1 utilizado cristal de 16MHz Dia 10: Inicio de testes adc; A comunica\u00e7\u00e3o serial ser\u00e1 feita via software, o teste inicial ser\u00e1 feita via polling e no futuro a biblioteca deve ser convertida para freeRTOS n\u00e3o bloqueante; Solicita\u00e7\u00e3o de insumos para teste barra de pinos f\u00eamea; Cria\u00e7\u00e3o da biblioteca de leitura SPI (Software - N\u00e3o Bloqueante) Escrita (OK) Tempo de escrita de byte: 88.875us Leitura (Pendente). Dia 07: Teste de grava\u00e7\u00e3o realizado, com adapta\u00e7\u00e3o dos pinos CN7; Inicio do projeto New Matrix (STM32 Cube IDE); Adapta\u00e7\u00e3o dos pinos CN5 (UART) debug de desenvolvimento da SEMANA2; Estudos Implementa\u00e7\u00e3o FreeRTOS. Dia 06: Organiza\u00e7\u00e3o da bancada de desenvolvimento e testes iniciais da placa de desenvolvimento; Dia 05: Organiza\u00e7\u00e3o de documenta\u00e7\u00e3o e material; Dia 04: Leitura de manuais de indicadores de terceiros; Observa\u00e7\u00f5es Dia 13: As fun\u00e7\u00f5es \"u8WriteCS1180()\" e \"u8_ResetCS1180()\" n\u00e3o apresenta gr\u00e1fico devido ao dado ter sido perdido Dia 12: Foi necess\u00e1rio efetuar altera\u00e7\u00f5es na placa com o objetivode se obter um canal de debug para o circuito adc-spi de comunica\u00e7\u00e3o, a altera\u00e7\u00e3o teve dura\u00e7\u00e3o de 2horas. A dura\u00e7\u00e3o se deu em virtude de problemas encontrados durante a altera\u00e7\u00e3o; Foi observado atrav\u00e9s do teste realizado no dia de trabalho que \u00e9 possivel atrav\u00e9s do firmware em desenvolvimento auxiliar nos processos de manuten\u00e7\u00e3o de equipamentos; Atravez da certeza que os sinais CS, SDI, SDO, CLK e READ est\u00e3o chegando no componente AD atrav\u00e9s de equipamentos como oscilosc\u00f3pio ou analisador l\u00f3gico, o microcontrolador pode enviar o comando de teste da fun\u00e7\u00e3o \"u8_TestADC()\". A fun\u00e7\u00e3o pode verificar se o componente ADC esta funcionando corretamente. (Deve-se ter a certeza que as trilas, indutores est\u00e3o em perfeito funcionamento) Dia 11: Solicita\u00e7\u00f5es de componentes apresentam um atraso na entrega o que pode impactar no tempo de desenvolvimento; Dia 06: Em conversas com Walyson, as atividades da semana 1 que compete a ele foram passadas para a proxima semana de trabalho. Para evitar a espera, as atividades da semana seguinte ser\u00e3o adiantadas evitando assim algum possivel atraso nos trabalhos. Dia 05: ausencia por 1h30minutos por motivo de sa\u00fade (3\u00aa dose vacina covid); sa\u00edda do trabalho com quatro horas de antecedencia por motivos pessoais e justificados a chefia e ao RH, com solicita\u00e7\u00e3o de reposi\u00e7\u00e3o das horas;","title":"Observa\u00e7\u00f5es"},{"location":"observacao/#observacoes-de-desenvolvimento","text":"","title":"OBSERVA\u00c7\u00d5ES DE DESENVOLVIMENTO"},{"location":"observacao/#janeiro","text":"","title":"Janeiro"},{"location":"observacao/#semana-01","text":"","title":"Semana 01"},{"location":"observacao/#atividades","text":"Dia 13: Criado biblioteca vERROR_CHECK() para tratativa de erros (In\u00edcio) Cria\u00e7\u00e3o da fun\u00e7\u00e3o de inicializa\u00e7\u00e3o do adc com compara\u00e7\u00e3o e tratativa de erro (ainda n\u00e3o implementado) Testes com a configura\u00e7\u00e3o do indicador antigo (Configura\u00e7\u00e3o de registradores); Fun\u00e7\u00e3o de leitura do adc (testado) Verifica\u00e7\u00f5es a respeito dos processos ocorridos no atual indicador de pesagem: N\u00e3o \u00e9 feito nenhuma escrita nos registradores de calibra\u00e7\u00e3o; Ao iniciar o atual indicador efetua um comando de reset; S\u00e3o configurados alguns registradores 0x00, 0x01 e 0x02 Ganho em 128 Escrita de configura\u00e7\u00e3o defaut no registrador 1 Escrita no registrador MUX com o valor1 Escrita no Registrador 0x02 do valor 0x04m ativando o registrador \"u8WriteCS1180()\" -> testado \"u8_ResetCS1180()\" -> testado Dia 12: Teste da fun\u00e7\u00e3o \"u8ReadCS1180()\". Efetuado teste sobre o ad seguido da requisi\u00e7\u00e3o de todos os registradores do ADC Cria\u00e7\u00e3o da fun\u00e7\u00e3o \"u8ReadCS1180()\" (N\u00e3o Testada) Cria\u00e7\u00e3o da fun\u00e7\u00e3o \"u8WriteCS1180()\" (N\u00e3o Testado) Cria\u00e7\u00e3o da fun\u00e7\u00e3o \"u8_ResetCS1180()\" (N\u00e3o Testado) Teste da fun\u00e7\u00e3o \"u8_TestCS1180()\" Dia 11: Inicio constru\u00e7\u00e3o biblioteca cs1180 Leitura de Byte em SPI em 16.16us e frequencia de clock em 545.45KHz Cristal externo de 16MHz(desenvolvimento) inserido no lugar do anterior, altera\u00e7\u00e3o do tem de tr\u00e1fego de 8bits em spi em +0.2us Cria\u00e7\u00e3o da leitura SPI (inicio) Cria\u00e7\u00e3o de \"semaforo\" para possivel multipla utiliza\u00e7\u00e3o do canal SPI \"software\", com retorno 0x00 para sucesso e 0x01 para falha na solicita\u00e7\u00e3o de escrita, indicando que o canal j\u00e1 estar em utiliza\u00e7\u00e3o A comunica\u00e7\u00e3o SPI foi atualizada tendo um ganho na frequencia. Motivo, cristal utilizado anteriormente (24.594MHz). Foi diagnosticado um erro com rela\u00e7\u00e3o ao cristal utilizado na placa de 24.594MHz para o de 25MHz. Para desenvolvimento ser\u00e1 utilizado cristal de 16MHz Dia 10: Inicio de testes adc; A comunica\u00e7\u00e3o serial ser\u00e1 feita via software, o teste inicial ser\u00e1 feita via polling e no futuro a biblioteca deve ser convertida para freeRTOS n\u00e3o bloqueante; Solicita\u00e7\u00e3o de insumos para teste barra de pinos f\u00eamea; Cria\u00e7\u00e3o da biblioteca de leitura SPI (Software - N\u00e3o Bloqueante) Escrita (OK) Tempo de escrita de byte: 88.875us Leitura (Pendente). Dia 07: Teste de grava\u00e7\u00e3o realizado, com adapta\u00e7\u00e3o dos pinos CN7; Inicio do projeto New Matrix (STM32 Cube IDE); Adapta\u00e7\u00e3o dos pinos CN5 (UART) debug de desenvolvimento da SEMANA2; Estudos Implementa\u00e7\u00e3o FreeRTOS. Dia 06: Organiza\u00e7\u00e3o da bancada de desenvolvimento e testes iniciais da placa de desenvolvimento; Dia 05: Organiza\u00e7\u00e3o de documenta\u00e7\u00e3o e material; Dia 04: Leitura de manuais de indicadores de terceiros;","title":"Atividades"},{"location":"observacao/#observacoes","text":"Dia 13: As fun\u00e7\u00f5es \"u8WriteCS1180()\" e \"u8_ResetCS1180()\" n\u00e3o apresenta gr\u00e1fico devido ao dado ter sido perdido Dia 12: Foi necess\u00e1rio efetuar altera\u00e7\u00f5es na placa com o objetivode se obter um canal de debug para o circuito adc-spi de comunica\u00e7\u00e3o, a altera\u00e7\u00e3o teve dura\u00e7\u00e3o de 2horas. A dura\u00e7\u00e3o se deu em virtude de problemas encontrados durante a altera\u00e7\u00e3o; Foi observado atrav\u00e9s do teste realizado no dia de trabalho que \u00e9 possivel atrav\u00e9s do firmware em desenvolvimento auxiliar nos processos de manuten\u00e7\u00e3o de equipamentos; Atravez da certeza que os sinais CS, SDI, SDO, CLK e READ est\u00e3o chegando no componente AD atrav\u00e9s de equipamentos como oscilosc\u00f3pio ou analisador l\u00f3gico, o microcontrolador pode enviar o comando de teste da fun\u00e7\u00e3o \"u8_TestADC()\". A fun\u00e7\u00e3o pode verificar se o componente ADC esta funcionando corretamente. (Deve-se ter a certeza que as trilas, indutores est\u00e3o em perfeito funcionamento) Dia 11: Solicita\u00e7\u00f5es de componentes apresentam um atraso na entrega o que pode impactar no tempo de desenvolvimento; Dia 06: Em conversas com Walyson, as atividades da semana 1 que compete a ele foram passadas para a proxima semana de trabalho. Para evitar a espera, as atividades da semana seguinte ser\u00e3o adiantadas evitando assim algum possivel atraso nos trabalhos. Dia 05: ausencia por 1h30minutos por motivo de sa\u00fade (3\u00aa dose vacina covid); sa\u00edda do trabalho com quatro horas de antecedencia por motivos pessoais e justificados a chefia e ao RH, com solicita\u00e7\u00e3o de reposi\u00e7\u00e3o das horas;","title":"Observa\u00e7\u00f5es"}]}